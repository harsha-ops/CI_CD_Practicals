pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        DOCKER_IMAGE = "harsha6798/ci_cd_practicals_java_image:${BUILD_NUMBER}"
        GITHUB_TOKEN = credentials('github_token')
        SONAR_URL = "http://192.168.33.15:9000"
    }

    stages {
        
        stage('Checkout') {
            steps {
                git branch: 'master', url: 'https://github.com/harsha-ops/ci_cd_practicals.git'
            }
        }

        stage('Build and Test') {
            steps {
                sh 'ls -l'
                sh 'cd java-app && mvn clean package'
            }
        }

        stage('Static Code Analysis') {
            
            steps {
                withCredentials([string(credentialsId: 'sonar_cred', variable: 'SONAR_AUTH_TOKEN')]) {
                    sh 'cd java-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
            }
        }

        stage('Build Docker Image') {
            
            steps {
                sh "docker build -t ${DOCKER_IMAGE} ./java-app/"
            }
        }

        stage('Login to Docker Registry') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: 'docker_cred', // Use your actual credentials ID
                    usernameVariable: 'DOCKER_USERNAME', 
                    passwordVariable: 'DOCKER_PASSWORD'
            )]) {
                sh '''
                docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
                '''
            }

            }
        }

        stage('Push Docker Image') {
            steps {
                sh 'docker push ${DOCKER_IMAGE}'
            }
        }

        stage('Update k8s manifest') {
            environment {
                REPO_URL = "https://${GITHUB_TOKEN}@github.com/harsha-ops/ci_cd_practicals.git"
            }

            steps {
                sh '''
                git config --global user.email "harsha.xyz@gmail.com"
                git config --global user.name "Harsha"
                sed -i "s|image: .*|image: ${DOCKER_IMAGE}|g" java-app-manifests/deployment.yml
                git add .
                git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                git push ${REPO_URL}
                '''
            }
        }
    }
}